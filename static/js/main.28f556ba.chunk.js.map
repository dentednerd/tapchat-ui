{"version":3,"sources":["assets/captainamerica.webp","assets/ironman.jpg","assets/blackwidow.jpg","organisms/TapCard.js","organisms/Message.js","organisms/ContactCard.js","assets/contacts.js","organisms/Recipient.js","organisms/Login.js","assets/data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","card","height","padding","textAlign","backgroundColor","active","clickable","emoji","fontSize","message","fontFamily","margin","TapCard","props","icon","action","classes","Card","raised","className","CardActionArea","onClick","symbol","label","viewer","width","borderRadius","display","flexFlow","justifyContent","alignItems","minHeight","recipient","lineHeight","marginRight","marginBottom","color","button","marginTop","marginLeft","cardImage","cardText","mobile","mobrecipient","mobspan","Message","msg","addRemoveRecipient","sendMessage","Hidden","mdDown","CardMedia","component","image","avatar","title","name","concat","map","phrase","key","Button","variant","lgUp","text","ContactCard","contact","number","captainamerica","ironman","blackwidow","grid","hide","Recipient","Grid","container","spacing","justify","contacts","item","xs","sm","login","input","Login","loginUser","FormControl","Input","api","axios","create","baseURL","headers","snackbar","App","useState","user","setUser","setMsg","setRecipient","sent","setSent","reset","length","msgToSend","join","console","log","post","toNumber","content","then","response","catch","error","data","md","lg","indexOf","index","splice","newMsg","addRemovePhrase","Snackbar","anchorOrigin","vertical","horizontal","open","ContentProps","SnackbarContent","aria-describedby","id","size","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28f556ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/captainamerica.4f13c40d.webp\";","module.exports = __webpack_public_path__ + \"static/media/ironman.4d4b260e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blackwidow.5dc7233a.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea } from '@material-ui/core';\nimport Emoji from 'a11y-react-emoji';\n\nconst useStyles = makeStyles({\n  card: {\n\t\theight: \"12rem\",\n\t\tpadding: \"1rem\",\n\t\ttextAlign: \"center\",\n\t\tbackgroundColor: \"white\"\n\t},\n\tactive: {\n\t\tbackgroundColor: \"#B3EFFF\"\n\t},\n\tclickable: {\n\t\theight: \"12rem\",\n\t\ttextAlign: \"center\"\n\t},\n\temoji: {\n\t\tfontSize: \"4rem\",\n\t\theight: \"4rem\"\n\t},\n\tmessage: {\n\t\tfontFamily: \"OpenDyslexic\",\n\t\tfontSize: \"1rem\",\n\t\theight: \"1rem\",\n\t\tmargin: 0,\n\t\tpadding: 0\n\t}\n});\n\nconst TapCard = (props) => {\n\tconst { icon, message, action, active } = props;\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Card\n\t\t\traised={!active}\n\t\t\tclassName={classes.card, active && classes.active}\n\t\t>\n\t\t\t<CardActionArea\n\t\t\t\tonClick={() => action()}\n\t\t\t\tclassName={classes.clickable}\n      >\n\t\t\t\t<Emoji className={classes.emoji} symbol={icon} label={message} />\n\t\t\t\t<p className={classes.message}>{message}</p>\n\t\t\t</CardActionArea>\n\t\t</Card>\n\t)\n};\n\nexport default TapCard;\n","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea, CardMedia, Button, Hidden } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n\tviewer: {\n\t\tpadding: \"2rem 2rem 1rem\",\n\t\twidth: \"calc(100% - 8rem)\",\n\t\tborderRadius: \"0.25rem\",\n\t\tbackgroundColor: \"#B3EFFF\",\n\t\tmargin: \"2rem\",\n\t\tdisplay: \"flex\",\n\t\tflexFlow: \"row wrap\",\n\t\tjustifyContent: \"flex-end\",\n\t\talignItems: \"center\",\n\t\tminHeight: \"5rem\"\n\t},\n\trecipient: {\n\t\theight: \"2rem\",\n\t\tfontSize: \"2rem\",\n\t\tlineHeight: \"2rem\",\n\t\tborderRadius: \"0.5rem\",\n\t\tpadding: \"0.5rem\",\n\t\tmarginRight: \"2rem\",\n\t\tmarginBottom: \"1rem\",\n\t\tbackgroundColor: \"#fff\",\n\t\tcolor: \"#000\"\n\t},\n\tmessage: {\n\t\theight: \"2rem\",\n\t\tfontSize: \"2rem\",\n\t\tlineHeight: \"2rem\",\n\t\tborderRadius: \"0.5rem\",\n\t\tpadding: \"0.5rem\",\n\t\tmarginRight: \"2rem\",\n\t\tmarginBottom: \"1rem\",\n\t\tbackgroundColor: \"#fff\",\n\t\tcolor: \"#000\"\n\t},\n  button: {\n\t\theight: \"3rem\",\n\t\tfontSize: \"2rem\",\n\t\tlineHeight: \"2rem\",\n\t\tborderRadius: \"0.5rem\",\n\t\tpadding: \"0.5rem\",\n\t\tbackgroundColor: \"#0a5\",\n\t\tcolor: \"#fff\",\n\t\tfontFamily: \"OpenDyslexic\",\n\t\tmarginBottom: \"1rem\"\n\t},\n\tcard: {\n\t\ttextAlign: \"center\",\n\t\twidth: \"10rem\",\n\t\tmarginTop: \"2rem\",\n\t\tmarginLeft: \"2rem\",\n\t\theight: \"8rem\"\n\t},\n\tcardImage: {\n\t\theight: \"5rem\"\n\t},\n\tcardText: {\n\t\tfontFamily: \"OpenDyslexic\",\n\t\tfontSize: \"1.5rem\",\n\t\tlineHeight: \"3rem\"\n\t},\n\tmobile: {\n\t\tmargin: \"1.5rem 1.5rem 1rem 1.5rem\",\n\t\tminHeight: \"3rem\"\n\t},\n\tmobrecipient: {\n\t\tbackgroundColor: \"#fff\",\n\t\tcolor: \"#000\",\n\t\tfontSize: \"2rem\",\n\t\tlineHeight: \"3rem\",\n\t\tmarginRight: \"1rem\",\n\t\tmarginBottom: \"1.5rem\",\n\t\tborderRadius: \"0.5rem\",\n\t\tpadding: \"0 0.25rem\"\n\t},\n\tmobspan: {\n\t\tcolor: \"#fff\",\n\t\tfontSize: \"2rem\",\n\t\tlineHeight: \"3rem\",\n\t\tmarginRight: \"1rem\",\n\t\tmarginBottom: \"1.5rem\",\n\t}\n});\n\nconst Message = (props) => {\n\tconst { msg, recipient, addRemoveRecipient, sendMessage } = props;\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Hidden mdDown>\n\t\t\t\t<div>\n\t\t\t\t\t{recipient && (\n\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t<CardActionArea\n\t\t\t\t\t\t\t\tonClick={() => addRemoveRecipient()}\n\t\t\t\t\t\t\t\tclassName={classes.cardText}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\t\tclassName={classes.cardImage}\n\t\t\t\t\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\t\t\t\t\timage={recipient.avatar}\n\t\t\t\t\t\t\t\t\ttitle={recipient.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{recipient.name}\n\t\t\t\t\t\t\t</CardActionArea>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.viewer}>\n\t\t\t\t\t{recipient && <span className={classes.recipient}>{recipient.name.concat(\",\")}</span>}\n\t\t\t\t\t{msg.map(phrase => <span key={phrase} className={classes.message}>{phrase}</span>)}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tonClick={() => sendMessage()}\n\t\t\t\t\t>\n\t\t\t\t\t\tSend\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Hidden>\n\t\t\t<Hidden lgUp>\n\t\t\t\t<section className={classes.mobile}>\n\t\t\t\t\t{recipient && (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={classes.mobrecipient}\n\t\t\t\t\t\t\tonClick={() => addRemoveRecipient()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{recipient.name.concat(\",\")}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t{msg.map(phrase => <span key={phrase} className={classes.mobspan}>{phrase}</span>)}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tonClick={() => sendMessage()}\n\t\t\t\t\t>\n\t\t\t\t\t\tSend\n\t\t\t\t\t</Button>\n\t\t\t\t</section>\n\t\t\t</Hidden>\n\t\t</Fragment>\n\t)\n}\n\nexport default Message;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea, CardMedia } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  card: {\n\t\theight: \"16rem\",\n\t\ttextAlign: \"center\",\n\t\tbackgroundColor: \"#B3EFFF\"\n\t},\n\tclickable: {\n\t\theight: \"16rem\"\n\t},\n\timage: {\n\t\theight: \"10rem\"\n\t},\n\ttext: {\n\t\tfontSize: \"2rem\",\n\t\tfontFamily: \"OpenDyslexic\",\n\t\tlineHeight: \"2rem\"\n\t}\n});\n\nconst ContactCard = (props) => {\n\tconst { contact, action } = props;\n\tconst { name, avatar } = contact;\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Card className={classes.card}>\n\t\t\t<CardActionArea\n\t\t\t\tclassName={classes.clickable}\n\t\t\t\tonClick={() => action(contact)}\n      >\n\t\t\t\t<CardMedia\n\t\t\t\t\tclassName={classes.image}\n\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\timage={avatar}\n\t\t\t\t\ttitle={name}\n\t\t\t\t/>\n\t\t\t\t<p className={classes.text}>{name}</p>\n\t\t\t</CardActionArea>\n\t\t</Card>\n\t)\n}\n\nexport default ContactCard;\n","import captainamerica from './captainamerica.webp';\nimport ironman from './ironman.jpg';\nimport blackwidow from './blackwidow.jpg';\n\nexport default [\n\t{\n\t\tname: \"Chris\",\n\t\tnumber: \"123\",\n\t\tavatar: captainamerica\n\t},\n\t{\n\t\tname: \"Row\",\n\t\tnumber: \"456\",\n\t\tavatar: ironman\n\t},\n\t{\n\t\tname: \"Joey\",\n\t\tnumber: \"07791351136\",\n\t\tavatar: blackwidow\n\t}\n]\n","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ContactCard from './ContactCard';\nimport contacts from '../assets/contacts';\n\nconst useStyles = makeStyles({\n\tgrid: {\n\t\tmargin: \"2rem auto\"\n\t},\n\thide: {\n\t\tdisplay: \"none\"\n\t}\n});\n\nconst Recipient = (props) => {\n\tconst { action, recipient } = props;\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{!recipient && <h2>Who would you like to talk to?</h2>}\n\t\t\t<Grid container spacing={2} className={classes.grid} justify=\"space-around\">\n\t\t\t\t{contacts.map(contact => (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\txs={6}\n\t\t\t\t\t\tsm={4}\n\t\t\t\t\t\tkey={contact.name}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ContactCard\n\t\t\t\t\t\t\tcontact={contact}\n\t\t\t\t\t\t\taction={action}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</Fragment>\n\t);\n}\n\nexport default Recipient;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Input, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n\tlogin: {\n    textAlign: \"center\"\n\t},\n\tinput: {\n\t\tfontFamily: \"OpenDyslexic\",\n\t\tfontSize: \"2rem\",\n\t\twidth: \"6rem\",\n\t\tbackgroundColor: \"#b3efff\",\n\t\tborderRadius: \"0.25rem\"\n\t},\n  button: {\n\t\theight: \"3rem\",\n\t\tfontSize: \"2rem\",\n\t\tlineHeight: \"2rem\",\n\t\tborderRadius: \"0.5rem\",\n\t\tpadding: \"0.5rem\",\n\t\tbackgroundColor: \"#0a5\",\n\t\tcolor: \"#fff\",\n\t\tfontFamily: \"OpenDyslexic\",\n\t\tmargin: \"1rem 0\"\n\t}\n});\n\nconst Login = (props) => {\n\tconst { loginUser } = props;\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<section className={classes.login}>\n\t\t\t<h1>Tapchat</h1>\n\t\t\t<h2>Please enter your pin:</h2>\n\t\t\t<FormControl>\n\t\t\t\t<Input\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tname=\"pin\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tonClick={() => loginUser(\"1234\")}\n\t\t\t\t>\n\t\t\t\t\tGo\n\t\t\t\t</Button>\n\t\t\t</FormControl>\n\t\t</section>\n\t)\n}\n\nexport default Login;\n","export default [\n\t{\n\t\ticon: \"🍽\",\n\t\tmessage: \"I'm hungry.\"\n\t},\n\t{\n\t\ticon: \"🚰\",\n\t\tmessage: \"I'm thirsty.\"\n\t},\n\t{\n\t\ticon: \"🚽\",\n\t\tmessage: \"I need the toilet.\"\n\t},\n\t{\n\t\ticon: \"🤕\",\n\t\tmessage: \"I've hurt myself.\"\n\t},\n\t{\n\t\ticon: \"🤫\",\n\t\tmessage: \"Quiet please!\"\n\t},\n\t{\n\t\ticon: \"⛔\",\n\t\tmessage: \"Don't come in!\"\n\t},\n\t{\n\t\ticon: \"🥵\",\n\t\tmessage: \"I'm hot!\"\n\t},\n\t{\n\t\ticon: \"🥶\",\n\t\tmessage: \"I'm cold!\"\n\t},\n\t{\n\t\ticon: \"💕\",\n\t\tmessage: \"I love you.\"\n\t},\n\t{\n\t\ticon:\"😄\",\n\t\tmessage: \"I'm so happy!\"\n\t},\n\t{\n\t\ticon: \"🤢\",\n\t\tmessage: \"I feel sick.\"\n\t},\n\t{\n\t\ticon: \"🤒\",\n\t\tmessage: \"I don't feel well.\"\n\t},\n\t{\n\t\ticon: \"😢\",\n\t\tmessage: \"I'm sad.\"\n\t},\n\t{\n\t\ticon: \"😭\",\n\t\tmessage: \"I'm crying.\"\n\t},\n\t{\n\t\ticon: \"😱\",\n\t\tmessage: \"I'm scared.\"\n\t},\n\t{\n\t\ticon: \"😡\",\n\t\tmessage: \"I'm angry!\"\n\t},\n\t{\n\t\ticon: \"😴\",\n\t\tmessage: \"I'm tired.\"\n\t},\n\t{\n\t\ticon: \"🛌\",\n\t\tmessage: \"It's bedtime.\"\n\t},\n\t{\n\t\ticon: \"🥺\",\n\t\tmessage: \"Please?\"\n\t},\n\t{\n\t\ticon: \"🤗\",\n\t\tmessage: \"Thank you!\"\n\t},\n\t{\n\t\ticon: \"🤣\",\n\t\tmessage: \"I'm laughing!\"\n\t},\n\t{\n\t\ticon: \"🤭\",\n\t\tmessage: \"Oops.\"\n\t},\n\n\t{\n\t\ticon: \"😵\",\n\t\tmessage: \"I feel dizzy.\"\n\t},\n\t{\n\t\ticon: \"😟\",\n\t\tmessage: \"I'm worried.\"\n\t}\n]\n","import React, { useState, Fragment } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Snackbar, SnackbarContent, Button } from '@material-ui/core';\nimport TapCard from './organisms/TapCard';\nimport Message from './organisms/Message';\nimport Recipient from './organisms/Recipient';\nimport Login from './organisms/Login';\nimport data from './assets/data';\n\nconst api = axios.create({\n  baseURL: \"http://tapchat.uksouth.cloudapp.azure.com/ipa/message\",\n  headers: {\n    \"Access-Control-Allow-Headers\": \"Access-Control-Allow-Origin\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json;charset=utf-8\"\n  }\n});\n\nconst useStyles = makeStyles({\n\tsnackbar: {\n    backgroundColor: \"#0a5\",\n    color: \"#fff\",\n    fontFamily: \"OpenDyslexic\",\n    fontSize: \"2rem\",\n    borderRadius:\"0.25rem\"\n  },\n  button: {\n    backgroundColor: \"#fff\",\n    color: \"#000\",\n    fontFamily: \"OpenDyslexic\",\n    fontSize: \"1rem\",\n    borderRadius:\"0.25rem\",\n    marginLeft: \"1rem\"\n  }\n});\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [msg, setMsg] = useState([]);\n  const [recipient, setRecipient] = useState(null);\n  const [sent, setSent] = useState(false);\n  const classes = useStyles();\n\n  const addRemovePhrase = (phrase) => {\n    const index = msg.indexOf(phrase);\n    if (index === -1) {\n      return setMsg([...msg, phrase]);\n    }\n    const newMsg = (msg) => {\n      msg.splice(index, 1);\n      return msg;\n    };\n\n    return setMsg([...newMsg(msg)]);\n  }\n\n  const addRemoveRecipient = (contact) => {\n    if (recipient === null) {\n      return setRecipient(contact);\n    }\n\n    return setRecipient(null);\n  }\n\n  const sendMessage = () => {\n    if (!msg.length) return;\n    const msgToSend = recipient.name.concat(', ').concat(msg.join(' '));\n    console.log('sending message: ', msgToSend);\n\n    api.post('/send', {\n      toNumber: '447791351136',\n      content: msgToSend\n    })\n    .then(response => {\n      console.log(response);\n      return setSent(true);\n    })\n    .catch(error => {\n      console.log('Something went wrong. Message not sent.');\n      console.log(error);\n    });\n  }\n\n  const reset = () => {\n    setSent(false);\n    setMsg([]);\n    setRecipient(null);\n  }\n\n  const loginUser = (user) => {\n    return setUser(user);\n  }\n\n  const logout = () => {\n    reset();\n    return setUser(null);\n  }\n\n  return (\n    <main>\n\n      {recipient && (\n        <section className=\"message\">\n          <Message\n            recipient={recipient}\n            msg={msg}\n            addRemoveRecipient={addRemoveRecipient}\n            sendMessage={sendMessage}\n          />\n        </section>\n      )}\n\n      {!user && (\n        <Login loginUser={loginUser} />\n      )}\n\n      {user && !recipient && (\n        <section className=\"start\">\n          <Recipient\n            action={addRemoveRecipient}\n            recipient={recipient}\n          />\n        </section>\n      )}\n      \n      <section className=\"board\">\n        {recipient && (\n          <Fragment>\n            <Grid container spacing={2}>\n              {data.map(phrase => (\n                <Grid item xs={6} sm={4} md={3} lg={2} key={phrase.message}>\n                  <TapCard\n                    icon={phrase.icon}\n                    message={phrase.message}\n                    active={msg.indexOf(phrase.message) > -1}\n                    action={() => addRemovePhrase(phrase.message)}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </Fragment>\n        )}\n      </section>\n\n      <Snackbar\n        className={classes.snackbar}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={sent}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n      >\n        <SnackbarContent\n          className={classes.snackbar}\n          aria-describedby=\"client-snackbar\"\n          message={<span id=\"message-id\">Message sent to {recipient && recipient.name}!</span>}\n          action={[\n          <Button\n            className={classes.button}\n            key=\"reset\"\n            size=\"small\"\n            onClick={reset}\n          >\n            Start again\n          </Button>,\n          <Button\n            className={classes.button}\n            key=\"logout\"\n            size=\"small\"\n            onClick={logout}\n          >\n            Log out\n          </Button>\n        ]}\n        >\n        </SnackbarContent>\n      </Snackbar>\n\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}